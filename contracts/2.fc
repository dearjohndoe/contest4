{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

forall X -> tuple cast_to_tuple (X x) asm "NOP";
(int) tlen(tuple t) asm "TLEN";

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  matrixA = cast_to_tuple([[1, 2, 3], [4, 5, 6]]);
  matrixB = cast_to_tuple([[7, 8], [9, 10], [11, 12]]);

  ~dump(matrixA);
  ~dump(matrixB);
  
  int n = tlen(matrixA);
  int m = tlen(matrixA.at(0));
  int p = tlen(matrixB.at(0));
  tuple result = empty_tuple();
  int j = 0;
  int i = 0;
  int sum = 0;
  int k = 0;
  while (i < n) {
    j = 0;
    tuple line = empty_tuple();
    while (j < p) {
      k = 0;
      sum = 0;
      while (k < m) {
        sum = sum + matrixA.at(i).at(k) * matrixB.at(k).at(j);
        k = k + 1;
      }
      line~tpush(sum);
      j = j + 1;
    }
    i = i + 1;

    result~tpush(line);
  }

  ~dump(result);
  return result;
}

() recv_internal() {
}

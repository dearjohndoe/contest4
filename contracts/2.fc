{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

(int) tlen(tuple t) asm "TLEN";
forall X -> (tuple, X) ~tpop (tuple t) asm "TPOP";

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  int n = tlen(matrixA);
  int m = tlen(matrixA.first());
  int p = tlen(matrixB.first());
  int j = 0;
  int i = 0;
  int sum = 0;
  int k = 0;
  tuple result = empty_tuple();
  tuple line = empty_tuple();
  tuple matrixAAtI = empty_tuple();
  while (i < n) {
    matrixAAtI = matrixA.at(i);
    j = 0;
    while (j < p) {
      k = 0;
      sum = 0;
      while (k < m) {
        sum = sum + matrixAAtI.at(k) * matrixB.at(k).at(j);
        k += 1;
      }
      line~tpush(sum);
      j += 1;
    }
    i += 1;

    result~tpush(line);
    line = empty_tuple();
  }

  return result;
}

() recv_internal() {
}
